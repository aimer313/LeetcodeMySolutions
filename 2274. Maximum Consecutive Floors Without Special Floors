class Solution1 {
public:
    int maxConsecutive(int bottom, int top, vector<int>& special) {
        sort(special.begin() , special.end());
        int n = special.size();
        int mx = max(special[0] - bottom , top - special[n-1]);
        for(int i = 1 ; i<n ; i++){
            int diff = abs(special[i] - special[i-1]) - 1;
            cout<< diff << " ";
            mx = max(mx,diff);
        }
        return mx;
    }
};

class Solution {
public:
    int maxConsecutive(int bottom, int top, vector<int>& special) {
        sort(special.begin() , special.end());
        int n = special.size();
        int mx = INT_MIN;
        mx = max(mx , special[0] - bottom);
        mx = max(mx , top - special[n-1]);
        for(int i = 0 ; i<n-1 ; i++){
            int diff = abs(special[i] - special[i+1]) - 1;
            mx = max(mx , diff);
        }
        return mx;
    }
};
