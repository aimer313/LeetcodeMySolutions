class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n = nums.size();
        if(n==1) return 0;

        int mn = INT_MAX,mx=INT_MIN;

        for(int i = 0 ; i<n ; i++){
            if(i == 0){
                if(nums[i] > nums[i+1]){
                    mx = max(mx,nums[i]);
                    mn = min(mn, nums[i]);
                }
                }
                else if(i == n-1){
                if(nums[i] < nums[i-1]){
                    mx = max(mx,nums[i]);
                    mn = min(mn, nums[i]);
                }
                }
                else{
                   if(nums[i] > nums[i+1]   || nums[i-1] > nums[i]){
                    mx = max(mx,nums[i]);
                    mn = min(mn, nums[i]);
                   } 
                }
            }
            if(mx == INT_MIN || mn == INT_MAX) return 0;
            cout << mx << " " << mn << endl;
            //find min & max pos
            int i,j;
            for(i = 0 ; i<n && nums[i] <= mn ; i++);
            for(j = n-1 ; j>=0 && nums[j] >= mx ; j--);
            cout << i << " " << j << endl;
        return j-i+1;
    }
};
